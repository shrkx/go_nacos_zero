// Code generated by goctl. DO NOT EDIT!
// Source: transform.proto

package transformclient

import (
	"context"

	"shorturl-service/rpc/transform"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetLongUrlRequest   = transform.GetLongUrlRequest
	GetLongUrlResponse  = transform.GetLongUrlResponse
	GetShortUrlRequest  = transform.GetShortUrlRequest
	GetShortUrlResponse = transform.GetShortUrlResponse

	Transform interface {
		GetShortUrl(ctx context.Context, in *GetShortUrlRequest, opts ...grpc.CallOption) (*GetShortUrlResponse, error)
		GetLongUrl(ctx context.Context, in *GetLongUrlRequest, opts ...grpc.CallOption) (*GetLongUrlResponse, error)
	}

	defaultTransform struct {
		cli zrpc.Client
	}
)

func NewTransform(cli zrpc.Client) Transform {
	return &defaultTransform{
		cli: cli,
	}
}

func (m *defaultTransform) GetShortUrl(ctx context.Context, in *GetShortUrlRequest, opts ...grpc.CallOption) (*GetShortUrlResponse, error) {
	client := transform.NewTransformClient(m.cli.Conn())
	return client.GetShortUrl(ctx, in, opts...)
}

func (m *defaultTransform) GetLongUrl(ctx context.Context, in *GetLongUrlRequest, opts ...grpc.CallOption) (*GetLongUrlResponse, error) {
	client := transform.NewTransformClient(m.cli.Conn())
	return client.GetLongUrl(ctx, in, opts...)
}
